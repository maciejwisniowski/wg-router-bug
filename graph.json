{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Account","fieldNames":["id"]},{"typeName":"User","fieldNames":["id","account","name"]},{"typeName":"Query","fieldNames":["test"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://main-service:8074/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://main-service:8074/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"type Account @key(fields: \"id\") {\n  id: ID!\n}\n\ntype User @key(fields: \"id account { id }\") {\n  id: ID!\n  account: Account!\n  name: String!\n}\n\ntype Query {\n  test: User!\n}\n"},"upstreamSchema":{"key":"4c30d87ed76b0dc1e933dd3c21d6aa3e2be1d1d3"}},"requestTimeoutSeconds":"10","id":"0","keys":[{"typeName":"Account","selectionSet":"id"},{"typeName":"User","selectionSet":"account { id } id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"User","fieldNames":["foo","id","account"]},{"typeName":"Account","fieldNames":["id"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://additional-service:8064/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://additional-service:8064/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"type Account @key(fields: \"id\") {\n  id: ID! @external\n}\n\ntype User @key(fields: \"id account { id }\") @extends {\n  id: ID! @external\n  account: Account! @external\n  foo: Boolean!\n}\n"},"upstreamSchema":{"key":"d2d8df8eaa195cd85215d09bc3e76dc9aa978eb0"}},"requestTimeoutSeconds":"10","id":"1","keys":[{"typeName":"User","selectionSet":"account { id } id"},{"typeName":"Account","selectionSet":"id"}]}],"graphqlSchema":"directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Account {\n  id: ID!\n}\n\ntype User {\n  id: ID!\n  account: Account!\n  name: String!\n  foo: Boolean!\n}\n\ntype Query {\n  test: User!\n}","stringStorage":{"4c30d87ed76b0dc1e933dd3c21d6aa3e2be1d1d3":"schema {\n  query: Query\n}\n\ndirective @eventsPublish(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Account @key(fields: \"id\") {\n  id: ID!\n}\n\ntype Query {\n  test: User!\n}\n\ntype User @key(fields: \"id account { id }\") {\n  account: Account!\n  id: ID!\n  name: String!\n}\n\nscalar openfed__FieldSet","d2d8df8eaa195cd85215d09bc3e76dc9aa978eb0":"directive @eventsPublish(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Account @key(fields: \"id\") {\n  id: ID! @external\n}\n\ntype User @key(fields: \"id account { id }\") {\n  account: Account! @external\n  foo: Boolean!\n  id: ID! @external\n}\n\nscalar openfed__FieldSet"}},"subgraphs":[{"id":"0","name":"main-service","routingUrl":"http://main-service:8074/graphql"},{"id":"1","name":"additional-service","routingUrl":"http://additional-service:8064/graphql"}]}
